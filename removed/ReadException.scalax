package co.blocke.scalajack

object ReadException {

  private def format(readFailure: ReadFailure): String = {
    val stringBuilder = new StringBuilder
    val errors = readFailure.errors

    stringBuilder.append("ReadException")

    errors.size match {
      case 0 => stringBuilder.append("(no errors)")
      case 1 => stringBuilder.append("(1 error):")
      case n => stringBuilder.append(s"($n errors):")
    }

    for ((path, error) <- errors)
      stringBuilder.append(s"\n  [$path] $error")

    stringBuilder.result()
  }

}

class ReadException(val readFailure: ReadFailure) extends RuntimeException(ReadException.format(readFailure))
